// Chatbot Lamine Yamal - Expert en Contractaci√≥ P√∫blica
class Chatbot {
    constructor() {
        this.isOnline = false;
        this.isTyping = false;
        this.conversationHistory = [];
        this.suggestions = [
            "Quins s√≥n els criteris d'adjudicaci√≥ m√©s adequats per a un contracte de serveis de neteja?",
            "Com es calcula el cost del cicle de vida (CCV) en un contracte?",
            "Quina documentaci√≥ de solv√®ncia t√®cnica necessito per licitar?",
            "Explica'm els criteris mediambientals que puc aplicar",
            "Quins s√≥n els terminis d'execuci√≥ recomanats per a obres p√∫bliques?"
        ];
        
        // Personalitat i coneixement de Lamine Yamal
        this.personality = {
            name: "Lamine Yamal",
            title: "Pilota d'Or de Contractaci√≥",
            expertise: "Expert en Llei 9/2017 de Contractes del Sector P√∫blic (LCSP)",
            language: "catal√†",
            tone: "professional per√≤ proper, amb confian√ßa i autoritat"
        };

        this.knowledgeBase = this.initializeKnowledgeBase();
    }

    initializeKnowledgeBase() {
        return {
            criterisAdjudicacio: {
                automaticsQuantificables: [
                    "Preu o cost (fins a 100% si nom√©s hi ha aquest criteri)",
                    "Termini d'execuci√≥ o entrega",
                    "Cost del cicle de vida (CCV)",
                    "Rendibilitat econ√≤mica",
                    "Efici√®ncia energ√®tica quantificable",
                    "Caracter√≠stiques t√®cniques quantificables",
                    "Garanties complement√†ries",
                    "Personal adscrit al contracte (quantitat i qualificaci√≥)"
                ],
                subjectius: [
                    "Qualitat t√®cnica de la proposta",
                    "Organitzaci√≥ i metodologia de treball",
                    "Experi√®ncia i qualificaci√≥ de l'equip",
                    "Mesures mediambientals",
                    "Aspectes socials i d'inserci√≥ laboral",
                    "Innovaci√≥ i valor afegit",
                    "Servei postvenda i manteniment",
                    "Accessibilitat universal"
                ]
            },
            solvencia: {
                economica: [
                    "Volum anual de negocis m√≠nim dels √∫ltims 3 anys",
                    "Patrimoni net m√≠nim",
                    "Asseguran√ßa d'indemnitzaci√≥ per riscos professionals",
                    "Classificaci√≥ empresarial (si escau)"
                ],
                tecnica: [
                    "Experi√®ncia en contractes similars √∫ltims 5 anys",
                    "Titulaci√≥ i experi√®ncia professional de l'equip",
                    "Certificats de qualitat (ISO 9001, etc.)",
                    "Mesures de gesti√≥ mediambiental",
                    "Personal t√®cnic disponible",
                    "Equipament i maquin√†ria"
                ]
            },
            aspectesLegals: {
                lcsp: "Llei 9/2017, de 8 de novembre, de Contractes del Sector P√∫blic",
                principis: [
                    "Lliure concurr√®ncia",
                    "Transpar√®ncia",
                    "No discriminaci√≥",
                    "Igualtat de tracte",
                    "Proporcionalitat",
                    "Integritat",
                    "Efici√®ncia en la utilitzaci√≥ de fons p√∫blics"
                ]
            }
        };
    }

    async init() {
        this.setupEventListeners();
        this.showWelcomeMessage();
        this.setOnlineStatus(true);
        this.loadConversationHistory();
    }

    setupEventListeners() {
        const chatInput = document.getElementById('chat-input');
        const sendButton = document.getElementById('send-button');
        const chatContainer = document.getElementById('chat-messages');

        if (chatInput && sendButton) {
            // Enviar missatge amb Enter
            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    this.sendMessage();
                }
            });

            // Enviar missatge amb bot√≥
            sendButton.addEventListener('click', () => {
                this.sendMessage();
            });

            // Auto-resize del textarea
            chatInput.addEventListener('input', () => {
                this.autoResizeTextarea(chatInput);
            });
        }

        // Event listeners per als suggeriments
        this.setupSuggestionListeners();
    }

    setupSuggestionListeners() {
        const suggestionsContainer = document.querySelector('.chat-suggestions');
        if (suggestionsContainer) {
            suggestionsContainer.addEventListener('click', (e) => {
                const suggestion = e.target.closest('.suggestion-item');
                if (suggestion) {
                    const text = suggestion.textContent.trim();
                    this.sendMessage(text);
                }
            });
        }
    }

    autoResizeTextarea(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';
    }

    setOnlineStatus(online) {
        this.isOnline = online;
        const statusIndicator = document.querySelector('.status-indicator');
        const statusText = document.querySelector('.status-text');
        
        if (statusIndicator && statusText) {
            statusIndicator.className = `status-indicator ${online ? 'online' : 'offline'}`;
            statusText.textContent = online ? 'En l√≠nia' : 'Fora de l√≠nia';
        }
    }

    showWelcomeMessage() {
        const welcomeMessage = `¬°Hola! S√≥c en **Lamine Yamal**, la vostra **Pilota d'Or de Contractaci√≥** üèÜ

Com a expert en la **Llei 9/2017 de Contractes del Sector P√∫blic (LCSP)**, estic aqu√≠ per ajudar-vos amb:

‚úÖ **Criteris d'adjudicaci√≥** √≤ptims per a cada tipus de contracte
‚úÖ **Requisits de solv√®ncia** econ√≤mica i t√®cnica  
‚úÖ **Cost del cicle de vida (CCV)** i c√†lculs complexos
‚úÖ **Aspectes mediambientals i socials** en la contractaci√≥
‚úÖ **Terminis d'execuci√≥** i garanties adequades
‚úÖ **Innovaci√≥** i valor afegit en les propostes

Pregunteu-me qualsevol dubte sobre contractaci√≥ p√∫blica. Estic preparat per oferir-vos les millors estrat√®gies! üí™`;

        this.addMessage(welcomeMessage, 'bot');
    }

    async sendMessage(text = null) {
        const chatInput = document.getElementById('chat-input');
        const message = text || chatInput?.value.trim();
        
        if (!message) return;

        // Netejar input si no √©s un suggeriment
        if (!text && chatInput) {
            chatInput.value = '';
            this.autoResizeTextarea(chatInput);
        }

        // Afegir missatge de l'usuari
        this.addMessage(message, 'user');
        
        // Mostrar indicador de typing
        this.showTypingIndicator();

        try {
            // Generar resposta
            const response = await this.generateResponse(message);
            
            // Amagar indicador de typing
            this.hideTypingIndicator();
            
            // Afegir resposta del bot
            this.addMessage(response, 'bot');
            
        } catch (error) {
            console.error('Error generant resposta:', error);
            this.hideTypingIndicator();
            this.addMessage('Ho sento, he tingut un problema t√®cnic. Pots tornar a provar la teva pregunta?', 'bot');
        }

        // Guardar conversa
        this.saveConversationHistory();
    }

    addMessage(content, sender) {
        const chatMessages = document.getElementById('chat-messages');
        if (!chatMessages) return;

        const messageElement = document.createElement('div');
        messageElement.className = `message ${sender}-message`;
        
        const currentTimestamp = new Date(); // Guardar l'objecte Date
        const timeString = currentTimestamp.toLocaleTimeString('ca-ES', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });

        const messageText = content || '';

        if (sender === 'bot') {
            messageElement.innerHTML = `
                <div class="message-avatar">
                    <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face" alt="Lamine Yamal" />
                    <div class="avatar-status online"></div>
                </div>
                <div class="message-content">
                    <div class="message-header">
                        <span class="message-author">Lamine Yamal</span>
                        <span class="message-time">${timeString}</span>
                    </div>
                    <div class="message-text">${this.formatMessage(messageText)}</div>
                </div>
            `;
        } else {
            messageElement.innerHTML = `
                <div class="message-content">
                    <div class="message-header">
                        <span class="message-author">Tu</span>
                        <span class="message-time">${timeString}</span>
                    </div>
                    <div class="message-text">${this.escapeHtml(messageText)}</div>
                </div>
            `;
        }

        chatMessages.appendChild(messageElement);
        this.scrollToBottom();

        // Afegir a l'historial
        this.conversationHistory.push({
            content,
            sender,
            timestamp: currentTimestamp.toISOString() // Guardar en format ISO
        });
    }

    formatMessage(content) {
        // Convertir markdown b√†sic a HTML
        if (typeof marked !== 'undefined') {
            try {
                return marked.parse(content.replace(/‚úÖ/g, '<span class="emoji">‚úÖ</span>').replace(/üèÜ/g, '<span class="emoji">üèÜ</span>').replace(/üí™/g, '<span class="emoji">üí™</span>'));
            } catch (e) {
                console.error("Error en marked.parse:", e);
                // Fallback a la versi√≥ anterior si marked falla
                return this.basicMarkdownToHtml(content);
            }
        } else {
            // Fallback si marked no est√† definit
            return this.basicMarkdownToHtml(content);
        }
    }

    basicMarkdownToHtml(content) {
        return content
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/\*(.*?)\*/g, '<em>$1</em>')
            .replace(/`(.*?)`/g, '<code>$1</code>')
            .replace(/\n/g, '<br>')
            .replace(/‚úÖ/g, '<span class="emoji">‚úÖ</span>')
            .replace(/üèÜ/g, '<span class="emoji">üèÜ</span>')
            .replace(/üí™/g, '<span class="emoji">üí™</span>');
    }

    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    showTypingIndicator() {
        this.isTyping = true;
        const chatMessages = document.getElementById('chat-messages');
        if (!chatMessages) return;

        const typingElement = document.createElement('div');
        typingElement.className = 'message bot-message typing-indicator';
        typingElement.id = 'typing-indicator';
        typingElement.innerHTML = `
            <div class="message-avatar">
                <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face" alt="Lamine Yamal" />
                <div class="avatar-status online"></div>
            </div>
            <div class="message-content">
                <div class="typing-dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </div>
        `;

        chatMessages.appendChild(typingElement);
        this.scrollToBottom();
    }

    hideTypingIndicator() {
        this.isTyping = false;
        const typingIndicator = document.getElementById('typing-indicator');
        if (typingIndicator) {
            typingIndicator.remove();
        }
    }

    scrollToBottom() {
        const chatMessages = document.getElementById('chat-messages');
        if (chatMessages) {
            setTimeout(() => {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 100);
        }
    }

    async generateResponse(userMessage) {
        // Primer, intentar resposta basada en coneixement local
        const localResponse = this.getLocalResponse(userMessage);
        if (localResponse) {
            return localResponse;
        }

        // Si no hi ha resposta local, usar API
        return await this.getAPIResponse(userMessage);
    }

    getLocalResponse(message) {
        const lowerMessage = message.toLowerCase();
        
        // Respostes sobre criteris d'adjudicaci√≥
        if (lowerMessage.includes('criteri') && (lowerMessage.includes('adjudicaci√≥') || lowerMessage.includes('adjudicacio'))) {
            return this.getCriteriaResponse(message);
        }
        
        // Respostes sobre solv√®ncia
        if (lowerMessage.includes('solv√®ncia') || lowerMessage.includes('solvencia')) {
            return this.getSolvencyResponse(message);
        }
        
        // Respostes sobre CCV
        if (lowerMessage.includes('ccv') || lowerMessage.includes('cicle de vida') || lowerMessage.includes('cost del cicle')) {
            return this.getCCVResponse();
        }
        
        // Respostes sobre terminis
        if (lowerMessage.includes('termini') || lowerMessage.includes('terminis')) {
            return this.getDeadlineResponse();
        }
        
        // Respostes sobre aspectes mediambientals
        if (lowerMessage.includes('mediambiental') || lowerMessage.includes('ambiental') || lowerMessage.includes('sostenib')) {
            return this.getEnvironmentalResponse();
        }

        return null;
    }

    getCriteriaResponse(message) {
        return `**Criteris d'adjudicaci√≥ segons la LCSP** üèÜ

Els criteris es divideixen en **dos tipus principals**:

**üìä CRITERIS AUTOM√ÄTICS (Quantificables objectivament):**
‚Ä¢ **Preu o cost** (pot ser fins al 100% si √©s l'√∫nic criteri)
‚Ä¢ **Termini d'execuci√≥** o entrega
‚Ä¢ **Cost del cicle de vida (CCV)**
‚Ä¢ **Caracter√≠stiques t√®cniques** quantificables
‚Ä¢ **Garanties complement√†ries**
‚Ä¢ **Personal adscrit** (quantitat i qualificaci√≥)

**üéØ CRITERIS SUBJECTIUS (Valoraci√≥ qualitativa):**
‚Ä¢ **Qualitat t√®cnica** de la proposta
‚Ä¢ **Organitzaci√≥ i metodologia** de treball  
‚Ä¢ **Experi√®ncia de l'equip** t√®cnic
‚Ä¢ **Mesures mediambientals**
‚Ä¢ **Aspectes socials** i d'inserci√≥ laboral
‚Ä¢ **Innovaci√≥** i valor afegit

**üí° Recomanaci√≥:** Combina sempre criteris autom√†tics i subjectius per obtenir la millor relaci√≥ qualitat-preu. El preu no hauria de superar el 60-70% del total per fomentar la qualitat.

Vols que t'ajudi amb criteris espec√≠fics per al teu tipus de contracte?`;
    }

    getSolvencyResponse(message) {
        return `**Requisits de Solv√®ncia segons la LCSP** üí™

**üí∞ SOLV√àNCIA ECON√íMICA:**
‚Ä¢ **Volum anual de negocis** dels √∫ltims 3 anys (m√≠nim 1,5 vegades el valor del contracte)
‚Ä¢ **Patrimoni net** m√≠nim adequat
‚Ä¢ **Asseguran√ßa d'indemnitzaci√≥** per riscos professionals
‚Ä¢ **Classificaci√≥ empresarial** (si escau, per contractes > 500.000‚Ç¨)

**üîß SOLV√àNCIA T√àCNICA:**
‚Ä¢ **Experi√®ncia** en contractes similars dels √∫ltims 5 anys
‚Ä¢ **Titulaci√≥ i experi√®ncia** de l'equip t√®cnic
‚Ä¢ **Certificats de qualitat** (ISO 9001, ISO 14001, etc.)
‚Ä¢ **Personal t√®cnic** disponible per al contracte
‚Ä¢ **Equipament i maquin√†ria** necessaris
‚Ä¢ **Mesures de gesti√≥ mediambiental**

**‚öñÔ∏è PRINCIPI DE PROPORCIONALITAT:**
Els requisits han de ser **proporcionals** a l'objecte del contracte. No es pot demanar m√©s del necessari!

**üìã DOCUMENTACI√ì HABITUAL:**
‚Ä¢ Comptes anuals dels √∫ltims 3 exercicis
‚Ä¢ Certificats d'experi√®ncia
‚Ä¢ T√≠tols acad√®mics i professionals
‚Ä¢ Certificats de qualitat vigents

Necessites ajuda per definir els requisits espec√≠fics del teu contracte?`;
    }

    getCCVResponse() {
        return `**Cost del Cicle de Vida (CCV)** üîÑ

El **CCV** √©s un criteri d'adjudicaci√≥ que considera **tots els costos** durant la vida √∫til del contracte:

**üìä COMPONENTS DEL CCV:**
‚Ä¢ **Costos d'adquisici√≥** inicial
‚Ä¢ **Costos d'utilitzaci√≥** (energia, combustible, etc.)
‚Ä¢ **Costos de manteniment** i reparacions
‚Ä¢ **Costos de final de vida** (eliminaci√≥, reciclatge)
‚Ä¢ **Costos externs mediambientals** (emissions CO‚ÇÇ, etc.)

**üí° AVANTATGES:**
‚úÖ Fomenta la **sostenibilitat**
‚úÖ Incentiva la **innovaci√≥** tecnol√≤gica
‚úÖ Millor **relaci√≥ qualitat-preu** a llarg termini
‚úÖ Reducci√≥ de l'**impacte ambiental**

**üî¢ C√ÄLCUL PR√ÄCTIC:**
CCV = Preu inicial + (Costos anuals √ó Anys de vida √∫til) + Costos finals

**üìã EXEMPLE PR√ÄCTIC:**
Per a vehicles: Preu compra + Combustible + Manteniment + Assegurances + Valor residual

**‚ö†Ô∏è IMPORTANT:** Cal definir clarament la **metodologia de c√†lcul** i els **par√†metres** en els plecs per garantir la transpar√®ncia.

Vols que t'ajudi a dissenyar el CCV per al teu contracte espec√≠fic?`;
    }

    getDeadlineResponse() {
        return `**Terminis d'Execuci√≥ en Contractaci√≥ P√∫blica** ‚è∞

**üìÖ PRINCIPIS GENERALS:**
‚Ä¢ Han de ser **realistes** i **proporcionals**
‚Ä¢ Permetre la **correcta execuci√≥** del contracte
‚Ä¢ Fomentar l'**efici√®ncia** sense comprometre la qualitat

**üéØ COM A CRITERI D'ADJUDICACI√ì:**
‚Ä¢ **Pes recomanat:** 5-15% del total
‚Ä¢ **L√≠mits:** Establir termini m√†xim i m√≠nim
‚Ä¢ **Valoraci√≥:** Lineal o per trams

**‚öñÔ∏è EQUILIBRI IMPORTANT:**
‚ùå **Terminis massa curts:** Poden afectar la qualitat
‚úÖ **Terminis adequats:** Permeten planificaci√≥ i qualitat
‚ùå **Terminis massa llargs:** Poden ser innecessaris

**üìã EXEMPLES PER TIPUS:**
‚Ä¢ **Obres:** Segons complexitat i volum
‚Ä¢ **Serveis:** Considerant recursos necessaris  
‚Ä¢ **Subministraments:** Segons disponibilitat i log√≠stica

**üí° CONSELL EXPERT:**
Consulta amb t√®cnics especialistes per establir terminis realistes. Un termini inadequat pot generar incompliments o baixa qualitat.

Quin tipus de contracte tens? T'ajudo a definir terminis adequats!`;
    }

    getEnvironmentalResponse() {
        return `**Aspectes Mediambientals en Contractaci√≥ P√∫blica** üå±

**üéØ OBJECTIUS PRINCIPALS:**
‚Ä¢ Reduir l'**impacte ambiental**
‚Ä¢ Fomentar l'**economia circular**
‚Ä¢ Complir els **ODS** (Objectius de Desenvolupament Sostenible)
‚Ä¢ Promoure la **innovaci√≥ verda**

**üìä COM A CRITERIS D'ADJUDICACI√ì:**
‚Ä¢ **Efici√®ncia energ√®tica** (quantificable)
‚Ä¢ **Emissions de CO‚ÇÇ** redu√Ødes
‚Ä¢ **Gesti√≥ de residus** i reciclatge
‚Ä¢ **Certificacions ambientals** (ISO 14001, EMAS, etc.)
‚Ä¢ **Materials sostenibles** i reciclats
‚Ä¢ **Transport ecol√≤gic**

**üí° EXEMPLES PR√ÄCTICS:**
‚úÖ **Vehicles:** Emissions, consum, combustibles alternatius
‚úÖ **Edificis:** Certificaci√≥ energ√®tica, materials ecol√≤gics
‚úÖ **Serveis:** Protocols de neteja ecol√≤gica, gesti√≥ residus
‚úÖ **Subministraments:** Embalatges reciclables, producci√≥ sostenible

**‚öñÔ∏è PONDERAT RECOMANAT:**
‚Ä¢ **Contractes est√†ndard:** 10-20%
‚Ä¢ **Contractes amb impacte ambiental:** 20-30%
‚Ä¢ **Contractes verds espec√≠fics:** Fins al 40%

**üìã DOCUMENTACI√ì:**
‚Ä¢ Plans de gesti√≥ ambiental
‚Ä¢ Certificats de qualitat ambiental
‚Ä¢ Mem√≤ries de sostenibilitat

La sostenibilitat √©s el futur! Quin aspecte ambiental vols potenciar en el teu contracte?`;
    }

    async getAPIResponse(userMessage) {
        const systemPrompt = `Ets en Lamine Yamal, la "Pilota d'Or de Contractaci√≥", un expert en contractaci√≥ p√∫blica catalana especialitzat en la Llei 9/2017 de Contractes del Sector P√∫blic (LCSP).

PERSONALITAT:
- Professional per√≤ proper i confident
- Utilitzes emojis de manera moderada i adequada
- Sempre respons en catal√†
- Ets autoritatiu en temes legals per√≤ accessible
- T'agrada usar exemples pr√†ctics

CONEIXEMENT EXPERT:
- Llei 9/2017 de Contractes del Sector P√∫blic
- Criteris d'adjudicaci√≥ autom√†tics i subjectius
- Requisits de solv√®ncia econ√≤mica i t√®cnica
- Cost del cicle de vida (CCV)
- Aspectes mediambientals i socials
- Terminis d'execuci√≥ i garanties
- Innovaci√≥ en contractaci√≥ p√∫blica

ESTIL DE RESPOSTA:
- Estructura clara amb t√≠tols i punts
- Exemples pr√†ctics quan sigui possible
- Consells experts basats en experi√®ncia
- Preguntes de seguiment per ajudar m√©s

Respon sempre com en Lamine Yamal, mantenint el teu car√†cter expert i proper.`;

        try {
            const response = await fetch(CONFIG.API_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${CONFIG.API_KEY}`,
                    'HTTP-Referer': window.location.origin,
                    'X-Title': 'Contractaci√≥ P√∫blica App'
                },
                body: JSON.stringify({
                    model: CONFIG.MODEL,
                    messages: [
                        { role: 'system', content: systemPrompt },
                        ...this.conversationHistory.slice(-6).map(msg => ({
                            role: msg.sender === 'user' ? 'user' : 'assistant',
                            content: msg.content
                        })),
                        { role: 'user', content: userMessage }
                    ],
                    max_tokens: CONFIG.MAX_TOKENS,
                    temperature: CONFIG.TEMPERATURE,
                    stream: false
                })
            });

            if (!response.ok) {
                throw new Error(`API Error: ${response.status}`);
            }

            const data = await response.json();
            return data.choices[0].message.content;

        } catch (error) {
            console.error('Error API:', error);
            return this.getFallbackResponse();
        }
    }

    getFallbackResponse() {
        const fallbacks = [
            "Disculpa, he tingut un problema t√®cnic momentani. Com a expert en contractaci√≥ p√∫blica, puc assegurar-te que estic aqu√≠ per ajudar-te amb qualsevol dubte sobre la LCSP. Pots reformular la teva pregunta?",
            "Sembla que hi ha hagut un petit problema de connexi√≥. No et preocupis! Com la teva Pilota d'Or de Contractaci√≥, estic preparat per resoldre tots els teus dubtes. Torna a provar, si us plau.",
            "Hi ha hagut una incid√®ncia t√®cnica, per√≤ no perdis la confian√ßa en mi! S√≥c expert en Llei 9/2017 i estic aqu√≠ per ajudar-te. Pots repetir la pregunta?"
        ];
        
        return fallbacks[Math.floor(Math.random() * fallbacks.length)];
    }

    saveConversationHistory() {
        try {
            localStorage.setItem('chatHistory', JSON.stringify(this.conversationHistory.slice(-50)));
        } catch (error) {
            console.error('Error guardant historial:', error);
        }
    }

    loadConversationHistory() {
        try {
            const saved = localStorage.getItem('chatHistory');
            if (saved) {
                this.conversationHistory = JSON.parse(saved);
                // Restaurar missatges visuals si cal
                this.restoreVisualHistory();
            }
        } catch (error) {
            console.error('Error carregant historial:', error);
        }
    }

    restoreVisualHistory() {
        // Nom√©s restaurar els √∫ltims 10 missatges per no sobrecarregar
        const recentMessages = this.conversationHistory.slice(-10);
        const chatMessages = document.getElementById('chat-messages');
        
        if (chatMessages && recentMessages.length > 0) {
            // Netejar missatges existents excepte el welcome
            const existingMessages = chatMessages.querySelectorAll('.message:not(.welcome-message)');
            existingMessages.forEach(msg => msg.remove());
            
            // Restaurar missatges recents
            recentMessages.forEach(msg => {
                if (msg.content && msg.sender) {
                    this.addMessageToDOM(msg.content, msg.sender, new Date(msg.timestamp));
                }
            });
        }
    }

    addMessageToDOM(content, sender, timestampDate) { // timestampDate ha de ser un objecte Date
        const chatMessages = document.getElementById('chat-messages');
        if (!chatMessages) return;

        const messageElement = document.createElement('div');
        messageElement.className = `message ${sender}-message`;
        
        let timeString = ' '; // Default a un espai en blanc
        if (timestampDate instanceof Date && !isNaN(timestampDate)) {
            try {
                timeString = timestampDate.toLocaleTimeString('ca-ES', { 
                    hour: '2-digit', 
                    minute: '2-digit' 
                });
            } catch (e) {
                console.warn("Error formatejant timestamp en addMessageToDOM:", e, timestampDate);
            }
        } else if (typeof timestampDate === 'string') { // Intentar parsejar si √©s string
            try {
                const parsedDate = new Date(timestampDate);
                if (parsedDate instanceof Date && !isNaN(parsedDate)) {
                    timeString = parsedDate.toLocaleTimeString('ca-ES', { 
                        hour: '2-digit', 
                        minute: '2-digit' 
                    });
                }
            } catch (e) {
                console.warn("Error parsejant timestamp string en addMessageToDOM:", e, timestampDate);
            }
        }

        const messageText = content || ''; // Assegurar que content no √©s null/undefined

        if (sender === 'bot') {
            messageElement.innerHTML = `
                <div class="message-avatar">
                    <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=40&h=40&fit=crop&crop=face" alt="Lamine Yamal" />
                    <div class="avatar-status online"></div>
                </div>
                <div class="message-content">
                    <div class="message-header">
                        <span class="message-author">Lamine Yamal</span>
                        <span class="message-time">${timeString}</span>
                    </div>
                    <div class="message-text">${this.formatMessage(messageText)}</div>
                </div>
            `;
        } else {
            messageElement.innerHTML = `
                <div class="message-content">
                    <div class="message-header">
                        <span class="message-author">Tu</span>
                        <span class="message-time">${timeString}</span>
                    </div>
                    <div class="message-text">${this.escapeHtml(messageText)}</div>
                </div>
            `;
        }

        chatMessages.appendChild(messageElement);
    }

    clearHistory() {
        this.conversationHistory = [];
        localStorage.removeItem('chatHistory');
        
        const chatMessages = document.getElementById('chat-messages');
        if (chatMessages) {
            chatMessages.innerHTML = '';
            this.showWelcomeMessage();
        }
    }
}

// Exportar per a √∫s global
window.Chatbot = Chatbot;

